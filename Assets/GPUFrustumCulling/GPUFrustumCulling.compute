#pragma kernel CSMain
#define FRUSTUM_PLANE_COUNT 6
#define THREAD_COUNT 64

struct BufferData
{
    float3 center;
    float3 extents;
};

float4 frustumPlanes[FRUSTUM_PLANE_COUNT];
StructuredBuffer<BufferData> buffer;
RWStructuredBuffer<uint> resultBuffer;

void TestPlanesAABBInternalFast(uint id, BufferData bufferData)
{
    float3 center = bufferData.center;
    float3 extents = bufferData.extents;
    float3 boundsMin = center - extents;
    float3 boundsMax = center + extents;
    
    for(int i = 0; i < FRUSTUM_PLANE_COUNT; i++)
    {
        float3 normal = frustumPlanes[i].xyz;
        float planeDistance = frustumPlanes[i].w;
        float3 bounds = boundsMin;
        bounds.x = lerp(boundsMin.x, boundsMax.x, step(0, normal.x));
        bounds.y = lerp(boundsMin.y, boundsMax.y, step(0, normal.y));
        bounds.z = lerp(boundsMin.z, boundsMax.z, step(0, normal.z));
        
        if(dot(normal, bounds) + planeDistance < 0)
        {
            resultBuffer[id] = 0;
            return;
        }
    }
    
    resultBuffer[id] = 1;
}

[numthreads(THREAD_COUNT,1,1)]
void CSMain (uint id : SV_DispatchThreadID)
{
    TestPlanesAABBInternalFast(id, buffer[id]);
}
